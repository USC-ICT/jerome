diff --color -Naur orig/boost_1_59_0/boost/numeric/ublas/matrix.hpp patched/boost_1_59_0/boost/numeric/ublas/matrix.hpp
--- orig/boost_1_59_0/boost/numeric/ublas/matrix.hpp	2015-08-06 02:47:02
+++ patched/boost_1_59_0/boost/numeric/ublas/matrix.hpp	2023-07-04 08:59:02
@@ -1384,7 +1384,7 @@
 
         /*! @note "pass by value" the key idea to enable move semantics */
         BOOST_UBLAS_INLINE
-        fixed_matrix &operator = (matrix m) {
+        fixed_matrix &operator = (fixed_matrix m) {
             assign_temporary(m);
             return *this;
         }
diff --color -Naur orig/boost_1_59_0/tools/build/src/engine/build.jam patched/boost_1_59_0/tools/build/src/engine/build.jam
--- orig/boost_1_59_0/tools/build/src/engine/build.jam	2015-08-11 06:53:51
+++ patched/boost_1_59_0/tools/build/src/engine/build.jam	2023-07-04 08:59:02
@@ -200,7 +200,7 @@
     : -L$(--python-lib[1]) -l$(--python-lib[2]) ;
 ## MacOSX Darwin, using GCC 2.9.x, 3.x
 toolset darwin cc :  "-o " : -D
-    :
+    : -Wno-implicit-function-declaration
     [ opt --release : -Wl,-x -O3 -finline-functions ]
     [ opt --debug : -g -O0 -fno-inline -pg ]
     [ opt --profile : -Wl,-x -O3 -finline-functions -g -pg ]
diff --color -Naur orig/boost_1_59_0/tools/build/src/engine/build.sh patched/boost_1_59_0/tools/build/src/engine/build.sh
--- orig/boost_1_59_0/tools/build/src/engine/build.sh	2015-08-11 06:53:51
+++ patched/boost_1_59_0/tools/build/src/engine/build.sh	2023-07-04 08:59:02
@@ -142,7 +142,7 @@
     ;;
 
     darwin)
-    BOOST_JAM_CC=cc
+    BOOST_JAM_CC="cc  -Wno-unused -Wno-format -Wno-implicit-function-declaration"
     ;;
 
     intel-darwin)
@@ -234,7 +234,7 @@
     ;;
 
     clang*)
-    BOOST_JAM_CC="clang -Wno-unused -Wno-format"
+    BOOST_JAM_CC="clang -Wno-unused -Wno-format -Wno-implicit-function-declaration"
     BOOST_JAM_TOOLSET=clang
     ;;
 
@@ -295,7 +295,10 @@
     BJAM_UPDATE=
 fi
 
+echo "### ready" 
+
 if test "${BJAM_UPDATE}" != "update" ; then
+echo "### will update" 
     echo_run rm -rf bootstrap
     echo_run mkdir bootstrap
     if test ! -r jamgram.y -o ! -r jamgramtab.h ; then
@@ -318,11 +321,16 @@
             echo_run ./bootstrap/mkjambase0 jambase.c Jambase
         fi
     fi
+echo "### will compile" 
     echo_run ${BOOST_JAM_CC} ${BOOST_JAM_OPT_JAM} ${BJAM_SOURCES}
 fi
+echo "### testing jam0" 
 if test -x "./bootstrap/jam0" ; then
     if test "${BJAM_UPDATE}" != "update" ; then
+echo "### will update jam0 clean" 
         echo_run ./bootstrap/jam0 -f build.jam --toolset=$BOOST_JAM_TOOLSET "--toolset-root=$BOOST_JAM_TOOLSET_ROOT" "$@" clean
     fi
+echo "### will update jam0" 
     echo_run ./bootstrap/jam0 -f build.jam --toolset=$BOOST_JAM_TOOLSET "--toolset-root=$BOOST_JAM_TOOLSET_ROOT" "$@"
 fi
+echo "### done" 
diff --color -Naur orig/boost_1_59_0/tools/build/src/tools/builtin.jam patched/boost_1_59_0/tools/build/src/tools/builtin.jam
--- orig/boost_1_59_0/tools/build/src/tools/builtin.jam	2015-08-11 06:53:51
+++ patched/boost_1_59_0/tools/build/src/tools/builtin.jam	2023-07-04 09:23:27
@@ -41,7 +41,7 @@
 
 
 .os-names = aix android bsd cygwin darwin freebsd haiku hpux iphone linux netbsd
-    openbsd osf qnx qnxnto sgi solaris unix unixware windows
+    openbsd osf qnx qnxnto sgi solaris unix unixware windows xros
     elf  # Not actually an OS -- used for targeting bare metal where object
          # format is ELF.  This catches both -elf and -eabi gcc targets and well
          # as other compilers targeting ELF. It is not clear how often we need
@@ -304,7 +304,7 @@
 
     # Advanced RISC Machines
     armv2 armv2a armv3 armv3m armv4 armv4t armv5 armv5t armv5te armv6 armv6j iwmmxt ep9312
-	armv7 armv7s
+	armv7 armv7s arm64
 
     : propagated optional ;
 
diff --color -Naur orig/boost_1_59_0/tools/build/src/tools/builtin.py patched/boost_1_59_0/tools/build/src/tools/builtin.py
--- orig/boost_1_59_0/tools/build/src/tools/builtin.py	2015-08-11 06:53:51
+++ patched/boost_1_59_0/tools/build/src/tools/builtin.py	2023-07-04 09:23:40
@@ -84,7 +84,7 @@
 __os_names = """
     amiga aix bsd cygwin darwin dos emx freebsd hpux iphone linux netbsd
     openbsd osf qnx qnxnto sgi solaris sun sunos svr4 sysv ultrix unix unixware
-    vms windows
+    vms windows xros
 """.split()
 
 # Translates from bjam current OS to the os tags used in host-os and target-os,
diff --color -Naur orig/boost_1_59_0/tools/build/src/tools/darwin.jam patched/boost_1_59_0/tools/build/src/tools/darwin.jam
--- orig/boost_1_59_0/tools/build/src/tools/darwin.jam	2015-08-11 06:53:51
+++ patched/boost_1_59_0/tools/build/src/tools/darwin.jam	2023-07-04 09:35:23
@@ -137,15 +137,15 @@
     common.handle-options darwin : $(condition) : $(command) : $(options) ;
     
     # - GCC 4.0 and higher in Darwin does not have -fcoalesce-templates.
-    if $(real-version) < "4.0.0"
-    {
-        flags darwin.compile.c++ OPTIONS $(condition) : -fcoalesce-templates ;
-    }
+#    if $(real-version) < "4.0.0"
+#    {
+#        flags darwin.compile.c++ OPTIONS $(condition) : -fcoalesce-templates ;
+#    }
     # - GCC 4.2 and higher in Darwin does not have -Wno-long-double.
-    if $(real-version) < "4.2.0"
-    {
-        flags darwin.compile OPTIONS $(condition) : -Wno-long-double ;
-    }
+#    if $(real-version) < "4.2.0"
+#    {
+#        flags darwin.compile OPTIONS $(condition) : -Wno-long-double ;
+#    }
     # - GCC on Darwin with -pedantic, suppress unsupported long long warning
     flags darwin.compile OPTIONS $(condition)/<warnings>all : -Wno-long-long ;
 
@@ -216,6 +216,10 @@
     {
         switch $(version[1])
         {
+            case xr* :
+            {
+                return $(version[1])-$(version[2-]:J=.) ;
+            }
             case iphone* :
             {
                 return $(version[1])-$(version[2-]:J=.) ;
@@ -258,6 +262,31 @@
         # Then device variation options.
         switch $(version[1])
         {
+#                flags darwin.compile OPTIONS <macosx-version-min>$(version-feature)
+#                    : -D__IPHONE_OS_VERSION_MIN_REQUIRED=$(N) ;
+#                flags darwin.link OPTIONS <macosx-version-min>$(version-feature)
+#                    : -D__IPHONE_OS_VERSION_MIN_REQUIRED=$(N) ;
+            case xrsim* :
+            {
+                local N = $(version[2]) ;
+                if ! $(version[3]) { N += 00 ; }
+                else if [ regex.match (..) : $(version[3]) ] { N += $(version[3]) ; }
+                else { N += 0$(version[3]) ; }
+                if ! $(version[4]) { N += 00 ; }
+                else if [ regex.match (..) : $(version[4]) ] { N += $(version[4]) ; }
+                else { N += 0$(version[4]) ; }
+                N = $(N:J=) ;
+            }
+            
+#                flags darwin.compile OPTIONS <macosx-version-min>$(version-feature)
+#                    : -miphoneos-version-min=$(version[2-]:J=.) ;
+#                flags darwin.link OPTIONS <macosx-version-min>$(version-feature)
+#                    : -miphoneos-version-min=$(version[2-]:J=.) ;
+
+            case xr* :
+            {
+            }
+            
             case iphonesim* :
             {
                 local N = $(version[2]) ;
@@ -333,7 +362,7 @@
 {
     root ?= /Developer ;
     local sdks-root = $(root)/SDKs ;
-    local sdks = [ GLOB $(sdks-root) : MacOSX*.sdk iPhoneOS*.sdk iPhoneSimulator*.sdk ] ;
+    local sdks = [ GLOB $(sdks-root) : MacOSX*.sdk iPhoneOS*.sdk iPhoneSimulator*.sdk XROS*.sdk XRSimulator*.sdk ] ;
     local result ;
     for local sdk in $(sdks)
     {
@@ -356,6 +385,14 @@
                 {
                     sdk-version = iphonesim $(sdk-version) ;
                 }
+                case xros :
+                {
+                    sdk-version = xros $(sdk-version) ;
+                }
+                case xrsimulator :
+                {
+                    sdk-version = xrsim $(sdk-version) ;
+                }
                 case * :
                 {
                     sdk-version = $(sdk-version:J=-) ;
@@ -397,6 +434,11 @@
         {
             support-ppc64 = ;
         }
+
+        case xr* :
+        {
+            support-ppc64 = ;
+        }
         
         case * :
         if $(osx-version) && ! [ version.version-less [ regex.split $(osx-version) \\. ] : 10 6 ]
@@ -433,10 +475,10 @@
         {
             if $(address-model) = 32_64 {
                 options = -arch i386 -arch x86_64 ;
-            } else if $(address-model) = 64 {
+            } else if $(address-model) = 32 {
                 options = -arch x86_64 ;
             } else {
-                options = -arch i386 ;
+                options = -arch x86_64 ;
             }
         }        
         
@@ -462,7 +504,7 @@
             if $(instruction-set) {
                 options = -arch$(_)$(instruction-set) ;
             } else {
-                options = -arch arm ;
+                options = -arch arm64 ;
             }
         }
     }
diff --color -Naur orig/boost_1_59_0/tools/build/src/tools/darwin.py patched/boost_1_59_0/tools/build/src/tools/darwin.py
--- orig/boost_1_59_0/tools/build/src/tools/darwin.py	2015-08-11 06:53:51
+++ patched/boost_1_59_0/tools/build/src/tools/darwin.py	2023-07-04 08:59:02
@@ -37,8 +37,8 @@
 feature.feature ('framework', [], ['free'])
 
 toolset.flags ('darwin.compile', 'OPTIONS', '<link>shared', ['-dynamic'])
-toolset.flags ('darwin.compile', 'OPTIONS', None, ['-Wno-long-double', '-no-cpp-precomp'])
-toolset.flags ('darwin.compile.c++', 'OPTIONS', None, ['-fcoalesce-templates'])
+toolset.flags ('darwin.compile', 'OPTIONS', None, ['-no-cpp-precomp'])
+toolset.flags ('darwin.compile.c++', 'OPTIONS', None, [])
 
 toolset.flags ('darwin.link', 'FRAMEWORK', '<framework>')
 
