/* DO NOT EDIT THIS FILE - it is machine generated */
//#include <jni.h>
/* Header for class jerome_Utterance */

#ifndef _Included_jerome_Utterance
#define _Included_jerome_Utterance
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     jerome_Utterance
 * Method:    hasValueForKey
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_jerome_Utterance_hasValueForKey
  (JNIEnv *, jobject, jstring);

/*
 * Class:     jerome_Utterance
 * Method:    valueForKey
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_jerome_Utterance_valueForKey
  (JNIEnv *, jobject, jstring);

/*
 * Class:     jerome_Utterance
 * Method:    setValueForKey
 * Signature: (Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_jerome_Utterance_setValueForKey
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     jerome_Utterance
 * Method:    getCount
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_jerome_Utterance_getCount
  (JNIEnv *, jobject);

/*
 * Class:     jerome_Utterance
 * Method:    setCount
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_jerome_Utterance_setCount
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     jerome_Utterance
 * Method:    getFieldNamed
 * Signature: ()[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_jerome_Utterance_getFieldNames
  (JNIEnv *, jobject);

/*
 * Class:     jerome_Utterance
 * Method:    release
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jerome_Utterance_release
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
